{"version":3,"sources":["component/DownIcon.js","component/FullPage.js","selection/TitleAndItems.js","selection/AboutItem.js","selection/MenuBar.js","selection/Skils.js","App.js","serviceWorker.js","index.js"],"names":["DownIcon","props","className","onClick","src","icon","alt","Fullpage","children","this","Component","TitleAndItems","name","FullPage","data","Avatar","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","icons","down","AboutItem","sections","items","content","console","log","MenuBar","class","href","style","float","theme","height","Skils","Skil","image","tilte","up","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ee7b4c3.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./DownIcon.css\"\r\n\r\nconst DownIcon = (props) => {\r\n    return (\r\n        <div className=\"divdown\" onClick={props.onClick}>\r\n            <div>\r\n                <img src={props.icon} alt=\"\" className=\"imgdown\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownIcon","import React, { Component } from \"react\";\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component{\r\n    render(){\r\n        const { children } = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className || \"\"}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage\r\n","import React, { Component } from \"react\"\r\nimport { SocialIcon } from 'react-social-icons'\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport DownIcon from \"../component/DownIcon\"\r\nimport FullPage from \"../component/FullPage\"\r\nimport data from '../data.json'\r\nimport \"./TitleSection.css\"\r\n\r\n\r\nclass TitleAndItems extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Element name=\"TitleSection\" className=\"element\">\r\n                </Element>\r\n                <FullPage className=\"first\">\r\n                    <img src={data.Avatar} alt=\"Avatar\" className=\"avatar\"></img>\r\n                    <div className=\"title\">\r\n                        <div>\r\n                            <h1>{data.title}</h1>\r\n                            <h2>{data.subtitle}</h2>\r\n                        </div>\r\n                        <div className=\"icons-wapper\">\r\n                            {\r\n                                Object.keys(data.links).map(key => {\r\n                                    return (\r\n                                        <div className=\"icon\"><SocialIcon url={data.links[key]} /></div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>   \r\n                </FullPage>\r\n                <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>\r\n                    <DownIcon\r\n                        icon={data.icons.down}\r\n                    />\r\n                </Link>\r\n                <Element name=\"About\" className=\"element\">\r\n                </Element>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleAndItems\r\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport FullPage from \"../component/FullPage\"\r\nimport data from '../data.json'\r\nimport DownIcon from \"../component/DownIcon\";\r\n\r\n\r\n\r\nclass AboutItem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FullPage className=\"secend\">\r\n                    <h3>{data.sections[0].title}</h3>\r\n                    <p>{data.sections[0].items[0].content}</p>\r\n                </FullPage>\r\n                \r\n                <Link \r\n                    activeClass=\"active\" \r\n                    to=\"Skils\" \r\n                    spy={true} \r\n                    smooth={true} \r\n                    offset={50} \r\n                    duration={500} \r\n                    onSetActive={this.handleSetActive}>\r\n                    <DownIcon\r\n                        icon={data.icons.down}\r\n                        onClick={() => console.log(\"im working\")}\r\n                    />\r\n                </Link>\r\n\r\n                <Element \r\n                    name=\"Skils\" \r\n                    className=\"element\">\r\n                </Element>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutItem\r\n","import React, { Component } from \"react\"\r\nimport { Link, Element } from 'react-scroll'\r\nimport ThemeSwitcher from \"react-theme-switcher\";\r\n\r\nimport \"./MenuBar.css\"\r\nimport data from '../data.json'\r\n\r\nclass MenuBar extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"topnav\">\r\n                    <a href=\"\"><Link activeClass=\"active\" to=\"TitleSection\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>Home</Link></a>\r\n                    <a href=\"\"><Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}> About</Link></a>\r\n                    <a href=\"\"><Link activeClass=\"active\" to=\"Skils\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>Skils</Link></a>\r\n                    <a href=\"\" style={{float : \"right\"}}><img src={data.icons.theme} alt=\"\" style={{height : \"27px\"}}/></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MenuBar","import React, { Component } from \"react\"\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nimport DownIcon from \"../component/DownIcon\"\r\nimport FullPage from \"../component/FullPage\"\r\nimport data from '../data.json'\r\nimport \"./Skils.css\"\r\n\r\n\r\nclass Skils extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FullPage className=\"third\">\r\n                    <h3>{data.sections[1].title}</h3>\r\n                    <dir className=\"cards-wapper\">\r\n                        {data.sections[1].items.map(Skil =>{\r\n                            return(\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-wapper\">\r\n                                        <img src={Skil.content.image}/>\r\n                                    </div>\r\n                                    <div className=\"skill-title-wapper\">\r\n                                        <h4>{Skil.content.tilte}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </dir>\r\n                </FullPage>\r\n                <Link activeClass=\"active\" to=\"TitleSection\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>\r\n                    <DownIcon\r\n                        icon={data.icons.up} \r\n                    />\r\n                </Link>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skils\r\n","import React from 'react'\nimport TitleAndItems from './selection/TitleAndItems'\nimport AboutItem from './selection/AboutItem'\nimport MenuBar from './selection/MenuBar'\nimport SnowStorm from 'react-snowstorm'\nimport './App.css'\nimport Skils from './selection/Skils'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n\t\t\t\t<SnowStorm />\n\t\t\t</div>\n      <MenuBar />\n      <TitleAndItems />\n      <AboutItem />\n      <Skils/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}